特点：
1、vue是JavaScript框架
2、简化Dom操作
3、响应式数据驱动

语法：

在package.json映射和直接在控制端写webpack的区别
1、映射首先去本地局部的找webpack，直接在终端写是找全局的

配置大致webpack
1、创建目录
2、配置webpackconfigjs
3、npm init（初始化项目）
4、配置packagejson
5、npm install
--------------------------plugin(插件)
html-webpack-plugin@3.2.0
uglifyjs-webpack-plugin@1.1.1(压缩)
webpack-dev-server@2.9.3(开发服务：尽量对应版本)
devServer参数
contentBase：为那个文件提供服务
port：端口号
inline：页面刷新
historyApiFallback:在SPA界面中html5中版本的history模式
--------------------webpack分离
webpack-merge@4.1.5(合并)

selenium
v8引擎(直接js转字节码)
--------------------------------------------------------------vueCli2
----------------------------runtime-only和runtime-compiler 区别
---------------步骤
compiler
template-》ast（解析树）-》 render 函数-》 vdom -> ul

only性能更高、代码量少
render -> vdom -> ul

那么为文件中的template是谁处理的呢
是由vue-template-compiler解析的
----------------------------------------
如果安装了不想要可以去index。js文件中关掉
vue init webpack [项目名字]
runtime-only(运行效率更高)
Eslint(限制)
--------------文件解释
-----static
静态资源（原封不动复制到dist）
------balelrc
环境配置
-------editorconfig
文件格式
-------eslintignore
忽略格式文件
-----------------------render
render(createElement)
createElement是一个函数
第一个参数：标签
会替换掉app的标签
第二个参数：是标签里的属性
第三个参数：是标签的内容（疯狂套娃）

---------------------------------------vuecli3

如果想取消选择默认的话
用户\.vuerc里删除

---------------------------------------修改cli3配置
不管在哪个目录都可以运行
vue ul

-----------------------------------------路由router
什么是前端渲染-后端渲染
前：



后：在服务器就已经中就生成了html，html+css+java


--------------------package-lock.json
因为可能packagejson安装的版本和真实的安装版本不太一样
里面记录这node-module安装的真实版本

-----------config.productionTip = true
项目跑起来会有构建信息

-------------------$mount("#app")
创建vue的时候会看对象里有没有el有的话会执行$mount


























